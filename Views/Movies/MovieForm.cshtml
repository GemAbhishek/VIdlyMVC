@model VidlyMVC.ViewModels.MovieFormViewModel
@{
    ViewBag.Title = "MovieForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Title</h2>

@using (Html.BeginForm("Save", "Movies"))
{
    @Html.ValidationSummary()
    @* //overload
        @Html.ValidationSummary(true,"please fix the following error")
    *@
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.Name)
        @Html.TextBoxFor(m => m.Movie.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Movie.ReleaseDate)
        @Html.TextBoxFor(m => m.Movie.ReleaseDate, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.ReleaseDate)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Movie.Genre)
        @Html.DropDownListFor(m => m.Movie.GenreId, new SelectList(@Model.Genres, "Id", "name"), "select Gener", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.Genre)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Movie.Instock)
        @Html.TextBoxFor(m => m.Movie.Instock, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.Instock)
    </div>

    @Html.AntiForgeryToken() /*encripted token on client brower --> to secure from malicious attack ---> [ValidateAntiForgeryToken] */

    @Html.HiddenFor(m => m.Movie.Id)
    <button type="submit" class="btn btn-primary">Save</button>
}

