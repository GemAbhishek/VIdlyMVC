@model VidlyMVC.ViewModels.CustomerFromViewModel
@{
    ViewBag.Title = "CustomerForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Title</h2>

@using (Html.BeginForm("Save", "Customers"))
{
    @Html.ValidationSummary()
    @* //overload
        @Html.ValidationSummary(true,"please fix the following error")
    *@
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.MembershipTypeId)
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(@Model.MembershipTypes, "Id", "Name"), "select membership", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.MembershipTypeId)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Dob)
        @Html.TextBoxFor(m => m.Customer.Dob, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Dob)
    </div>

    <div class="form-group form-check">
        @Html.CheckBoxFor(m => m.Customer.IsSubscribed)
        is subscribed
    </div>
    @Html.HiddenFor(m => m.Customer.Id)

    @Html.AntiForgeryToken()  /*encripted token on client brower --> to secure from malicious attack ---> [ValidateAntiForgeryToken] */

    <button type="submit" class="btn btn-primary">Save</button>
}
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}